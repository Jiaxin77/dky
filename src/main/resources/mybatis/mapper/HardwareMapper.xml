<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="hci.dky.dao.HardwareMapper" >
  <resultMap id="BaseResultMap" type="hci.dky.pojo.Hardware" >
    <constructor >
      <idArg column="hardware_id" jdbcType="BIGINT" javaType="java.lang.Long" />
      <arg column="first_object_name" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="second_object_name" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="first_index_name" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="second_index_name" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="eva_condition" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="hardware_lower" jdbcType="DECIMAL" javaType="java.math.BigDecimal" />
      <arg column="hardware_best" jdbcType="DECIMAL" javaType="java.math.BigDecimal" />
      <arg column="hardware_upper" jdbcType="DECIMAL" javaType="java.math.BigDecimal" />
      <arg column="hardware_unit" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="other_standard" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="serious_degree" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="pic_des" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="index_source" jdbcType="VARCHAR" javaType="java.lang.String" />
    </constructor>
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    hardware_id, first_object_name, second_object_name, first_index_name, second_index_name, 
    eva_condition, hardware_lower, hardware_best, hardware_upper, hardware_unit, other_standard, 
    serious_degree, pic_des, index_source
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="hci.dky.pojo.HardwareExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from hardware
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from hardware
    where hardware_id = #{hardwareId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from hardware
    where hardware_id = #{hardwareId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="hci.dky.pojo.HardwareExample" >
    delete from hardware
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="hci.dky.pojo.Hardware" keyColumn="id" keyProperty="id" useGeneratedKeys="true">
    insert into hardware (hardware_id, first_object_name, second_object_name, 
      first_index_name, second_index_name, eva_condition, 
      hardware_lower, hardware_best, hardware_upper, 
      hardware_unit, other_standard, serious_degree, 
      pic_des, index_source)
    values (#{hardwareId,jdbcType=BIGINT}, #{firstObjectName,jdbcType=VARCHAR}, #{secondObjectName,jdbcType=VARCHAR}, 
      #{firstIndexName,jdbcType=VARCHAR}, #{secondIndexName,jdbcType=VARCHAR}, #{evaCondition,jdbcType=VARCHAR}, 
      #{hardwareLower,jdbcType=DECIMAL}, #{hardwareBest,jdbcType=DECIMAL}, #{hardwareUpper,jdbcType=DECIMAL}, 
      #{hardwareUnit,jdbcType=VARCHAR}, #{otherStandard,jdbcType=VARCHAR}, #{seriousDegree,jdbcType=VARCHAR}, 
      #{picDes,jdbcType=VARCHAR}, #{indexSource,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="hci.dky.pojo.Hardware" >
    insert into hardware
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="hardwareId != null" >
        hardware_id,
      </if>
      <if test="firstObjectName != null" >
        first_object_name,
      </if>
      <if test="secondObjectName != null" >
        second_object_name,
      </if>
      <if test="firstIndexName != null" >
        first_index_name,
      </if>
      <if test="secondIndexName != null" >
        second_index_name,
      </if>
      <if test="evaCondition != null" >
        eva_condition,
      </if>
      <if test="hardwareLower != null" >
        hardware_lower,
      </if>
      <if test="hardwareBest != null" >
        hardware_best,
      </if>
      <if test="hardwareUpper != null" >
        hardware_upper,
      </if>
      <if test="hardwareUnit != null" >
        hardware_unit,
      </if>
      <if test="otherStandard != null" >
        other_standard,
      </if>
      <if test="seriousDegree != null" >
        serious_degree,
      </if>
      <if test="picDes != null" >
        pic_des,
      </if>
      <if test="indexSource != null" >
        index_source,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="hardwareId != null" >
        #{hardwareId,jdbcType=BIGINT},
      </if>
      <if test="firstObjectName != null" >
        #{firstObjectName,jdbcType=VARCHAR},
      </if>
      <if test="secondObjectName != null" >
        #{secondObjectName,jdbcType=VARCHAR},
      </if>
      <if test="firstIndexName != null" >
        #{firstIndexName,jdbcType=VARCHAR},
      </if>
      <if test="secondIndexName != null" >
        #{secondIndexName,jdbcType=VARCHAR},
      </if>
      <if test="evaCondition != null" >
        #{evaCondition,jdbcType=VARCHAR},
      </if>
      <if test="hardwareLower != null" >
        #{hardwareLower,jdbcType=DECIMAL},
      </if>
      <if test="hardwareBest != null" >
        #{hardwareBest,jdbcType=DECIMAL},
      </if>
      <if test="hardwareUpper != null" >
        #{hardwareUpper,jdbcType=DECIMAL},
      </if>
      <if test="hardwareUnit != null" >
        #{hardwareUnit,jdbcType=VARCHAR},
      </if>
      <if test="otherStandard != null" >
        #{otherStandard,jdbcType=VARCHAR},
      </if>
      <if test="seriousDegree != null" >
        #{seriousDegree,jdbcType=VARCHAR},
      </if>
      <if test="picDes != null" >
        #{picDes,jdbcType=VARCHAR},
      </if>
      <if test="indexSource != null" >
        #{indexSource,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="hci.dky.pojo.HardwareExample" resultType="java.lang.Integer" >
    select count(*) from hardware
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update hardware
    <set >
      <if test="record.hardwareId != null" >
        hardware_id = #{record.hardwareId,jdbcType=BIGINT},
      </if>
      <if test="record.firstObjectName != null" >
        first_object_name = #{record.firstObjectName,jdbcType=VARCHAR},
      </if>
      <if test="record.secondObjectName != null" >
        second_object_name = #{record.secondObjectName,jdbcType=VARCHAR},
      </if>
      <if test="record.firstIndexName != null" >
        first_index_name = #{record.firstIndexName,jdbcType=VARCHAR},
      </if>
      <if test="record.secondIndexName != null" >
        second_index_name = #{record.secondIndexName,jdbcType=VARCHAR},
      </if>
      <if test="record.evaCondition != null" >
        eva_condition = #{record.evaCondition,jdbcType=VARCHAR},
      </if>
      <if test="record.hardwareLower != null" >
        hardware_lower = #{record.hardwareLower,jdbcType=DECIMAL},
      </if>
      <if test="record.hardwareBest != null" >
        hardware_best = #{record.hardwareBest,jdbcType=DECIMAL},
      </if>
      <if test="record.hardwareUpper != null" >
        hardware_upper = #{record.hardwareUpper,jdbcType=DECIMAL},
      </if>
      <if test="record.hardwareUnit != null" >
        hardware_unit = #{record.hardwareUnit,jdbcType=VARCHAR},
      </if>
      <if test="record.otherStandard != null" >
        other_standard = #{record.otherStandard,jdbcType=VARCHAR},
      </if>
      <if test="record.seriousDegree != null" >
        serious_degree = #{record.seriousDegree,jdbcType=VARCHAR},
      </if>
      <if test="record.picDes != null" >
        pic_des = #{record.picDes,jdbcType=VARCHAR},
      </if>
      <if test="record.indexSource != null" >
        index_source = #{record.indexSource,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update hardware
    set hardware_id = #{record.hardwareId,jdbcType=BIGINT},
      first_object_name = #{record.firstObjectName,jdbcType=VARCHAR},
      second_object_name = #{record.secondObjectName,jdbcType=VARCHAR},
      first_index_name = #{record.firstIndexName,jdbcType=VARCHAR},
      second_index_name = #{record.secondIndexName,jdbcType=VARCHAR},
      eva_condition = #{record.evaCondition,jdbcType=VARCHAR},
      hardware_lower = #{record.hardwareLower,jdbcType=DECIMAL},
      hardware_best = #{record.hardwareBest,jdbcType=DECIMAL},
      hardware_upper = #{record.hardwareUpper,jdbcType=DECIMAL},
      hardware_unit = #{record.hardwareUnit,jdbcType=VARCHAR},
      other_standard = #{record.otherStandard,jdbcType=VARCHAR},
      serious_degree = #{record.seriousDegree,jdbcType=VARCHAR},
      pic_des = #{record.picDes,jdbcType=VARCHAR},
      index_source = #{record.indexSource,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="hci.dky.pojo.Hardware" >
    update hardware
    <set >
      <if test="firstObjectName != null" >
        first_object_name = #{firstObjectName,jdbcType=VARCHAR},
      </if>
      <if test="secondObjectName != null" >
        second_object_name = #{secondObjectName,jdbcType=VARCHAR},
      </if>
      <if test="firstIndexName != null" >
        first_index_name = #{firstIndexName,jdbcType=VARCHAR},
      </if>
      <if test="secondIndexName != null" >
        second_index_name = #{secondIndexName,jdbcType=VARCHAR},
      </if>
      <if test="evaCondition != null" >
        eva_condition = #{evaCondition,jdbcType=VARCHAR},
      </if>
      <if test="hardwareLower != null" >
        hardware_lower = #{hardwareLower,jdbcType=DECIMAL},
      </if>
      <if test="hardwareBest != null" >
        hardware_best = #{hardwareBest,jdbcType=DECIMAL},
      </if>
      <if test="hardwareUpper != null" >
        hardware_upper = #{hardwareUpper,jdbcType=DECIMAL},
      </if>
      <if test="hardwareUnit != null" >
        hardware_unit = #{hardwareUnit,jdbcType=VARCHAR},
      </if>
      <if test="otherStandard != null" >
        other_standard = #{otherStandard,jdbcType=VARCHAR},
      </if>
      <if test="seriousDegree != null" >
        serious_degree = #{seriousDegree,jdbcType=VARCHAR},
      </if>
      <if test="picDes != null" >
        pic_des = #{picDes,jdbcType=VARCHAR},
      </if>
      <if test="indexSource != null" >
        index_source = #{indexSource,jdbcType=VARCHAR},
      </if>
    </set>
    where hardware_id = #{hardwareId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="hci.dky.pojo.Hardware" >
    update hardware
    set first_object_name = #{firstObjectName,jdbcType=VARCHAR},
      second_object_name = #{secondObjectName,jdbcType=VARCHAR},
      first_index_name = #{firstIndexName,jdbcType=VARCHAR},
      second_index_name = #{secondIndexName,jdbcType=VARCHAR},
      eva_condition = #{evaCondition,jdbcType=VARCHAR},
      hardware_lower = #{hardwareLower,jdbcType=DECIMAL},
      hardware_best = #{hardwareBest,jdbcType=DECIMAL},
      hardware_upper = #{hardwareUpper,jdbcType=DECIMAL},
      hardware_unit = #{hardwareUnit,jdbcType=VARCHAR},
      other_standard = #{otherStandard,jdbcType=VARCHAR},
      serious_degree = #{seriousDegree,jdbcType=VARCHAR},
      pic_des = #{picDes,jdbcType=VARCHAR},
      index_source = #{indexSource,jdbcType=VARCHAR}
    where hardware_id = #{hardwareId,jdbcType=BIGINT}
  </update>
</mapper>